class Solution {
public:
    bool isPrime(int num) {
        if (num <= 1) return false;   
        if (num == 2 || num == 3) return true;  
        if (num % 2 == 0 || num % 3 == 0) return false;  

        for (int i = 5; i * i <= num; i += 6) {
            if (num % i == 0 || num % (i + 2) == 0) return false;
        }
        return true;
    }
    
    vector<int> closestPrimes(int left, int right) {
        int min = INT_MAX;
        vector<int> temp;
        int num1=-1 , num2=-1;
        for(int i=left; i<=right; i++){
            if(isPrime(i)) temp.push_back(i);
        }

        if (temp.size() < 2) return {-1, -1};
        
        for(int i=0; i<temp.size()-1; i++){
           if(temp[i+1]-temp[i] < min){
            min = temp[i+1]-temp[i];
            num1 = temp[i];
            num2 = temp[i+1];
           }
        }
        if (temp.size() < 2)  num1=-1,num2=-1;
        vector<int> ans;
        ans.push_back(num1);
        ans.push_back(num2);

        return ans;
    }
};
